!function(){const e="mib-neuralizer-v1",s=["./","./index.html","./assets/css/styles.min.css","./assets/img/base.png","./assets/img/buttons.png","./assets/img/favicon-dark-mode.svg","./assets/img/head.png","https://rokrypto.github.io/mib-neuralizer/assets/img/men-in-black-neuralizer-rokrypto.jpg","./assets/js/scripts.min.js","./assets/sound/neuralizer.mp3"];self.addEventListener("install",(t=>{t.waitUntil((async()=>{try{const t=await caches.open(e);await t.addAll(s)}catch(t){console.error("Failed to pre-cache assets:",t)}})())})),self.addEventListener("activate",(s=>{s.waitUntil((async()=>{try{const s=await caches.keys();await Promise.all(s.map((s=>{if(s!==e)return caches.delete(s)})))}catch(s){console.error("Failed to clean up old caches:",s)}})()),self.clients.claim()})),self.addEventListener("fetch",(s=>{s.respondWith((async()=>{try{const t=await caches.match(s.request);if(t)return t;const a=await fetch(s.request);return(await caches.open(e)).put(s.request,a.clone()),a}catch(t){throw console.error("Failed to fetch resource:",t),t}})())}))}();